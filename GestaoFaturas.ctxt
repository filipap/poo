#BlueJ class context
comment0.target=GestaoFaturas
comment1.params=
comment1.target=GestaoFaturas()
comment1.text=\n\ Construtor\ para\ objetos\ da\ classe\ GestaoFaturas\n
comment10.params=
comment10.target=int\ hashCode()
comment10.text=\n\ Retorna\ o\ hashcode\n\ @return\ result\n
comment11.params=
comment11.target=void\ ordData()
comment11.text=\n\ \n
comment2.params=faturas
comment2.target=GestaoFaturas(java.util.List)
comment2.text=\n\ Construtor\ para\ objetos\ parametrizado\ da\ classe\ GestaoFaturas\n\ @param\ faturas\n
comment3.params=fat
comment3.target=GestaoFaturas(GestaoFaturas)
comment3.text=\n\ Construtor\ de\ copia\ para\ objetos\ da\ classe\ GestaoFaturas\n\ @param\ fat\ Fatura\n
comment4.params=
comment4.target=java.util.List\ getFaturas()
comment4.text=\n\ Devolve\ as\ faturas\ da\ classe\ GestaoFaturas\n\ @return\ \n
comment5.params=faturas
comment5.target=void\ setFaturas(java.util.List)
comment5.text=\n\ Define\ as\ faturas\ da\ classe\ GestaoFaturas\n\ @param\ faturas\n
comment6.params=
comment6.target=GestaoFaturas\ clone()
comment6.text=\n\ Cria\ uma\ copia\ do\ objecto\ \n\ @return\n
comment7.params=o
comment7.target=boolean\ equals(java.lang.Object)
comment7.text=\n\ Verifica\ a\ igualdade\ de\ dois\ objectos\n\ @param\ obj\n\ @return\ true\ or\ false\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\n\ Retorna\ uma\ representao\ textual\ do\ objecto\n\ @return\ \n
comment9.params=fat
comment9.target=void\ addFatura(Fatura)
comment9.text=\n\ Verifica\ a\ igualdade\ de\ dois\ objectos\n\ @param\ fat\n
numComments=12
