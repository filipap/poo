#BlueJ class context
comment0.target=GestaoFaturas
comment1.params=
comment1.target=GestaoFaturas()
comment1.text=\n\ Construtor\ para\ objetos\ da\ classe\ GestaoFaturas\n
comment10.params=
comment10.target=int\ hashCode()
comment10.text=\n\ Retorna\ o\ hashcode\n\ @return\ result\n
comment11.params=
comment11.target=int\ sizeListaFaturas()
comment11.text=\n\ metodo\ que\ determina\ o\ numero\ de\ faturas\ da\ lista\n
comment12.params=f1\ f2
comment12.target=int\ compareByDate(Fatura,\ Fatura)
comment12.text=\n\ M\u00E9todo\ compareTo\ para\ datas\ \n\ Retorna\ 0\ se\ forem\ iguais,\ 1\ se\ this\ >\ fat\ e\ -1\ se\ o\ fat\ >\ this\n
comment13.params=
comment13.target=void\ ordData()
comment13.text=\n\ M\u00E9todo\ que\ retorna\ a\ lista\ de\ faturas\ ordenada\ por\ datas\n\ @return\ \n
comment14.params=f1\ f2
comment14.target=int\ compare(Fatura,\ Fatura)
comment14.text=\n\ M\u00E9todo\ compareTo\ para\ valor\ despesa\ \n\ Retorna\ 0\ se\ forem\ iguais,\ -1\ se\ f1\ >\ f2\ e\ 1\ se\ o\ f1\ >\ f2\n
comment15.params=
comment15.target=void\ ordValor()
comment15.text=\n\ M\u00E9todo\ que\ retorna\ a\ lista\ de\ faturas\ ordenada\ por\ valor\ de\ despesa\n\ @return\ \n
comment16.params=
comment16.target=GestaoFaturas\ getFaturasPendentes()
comment16.text=\n\ M\u00E9todo\ que\ retorna\ a\ lista\ de\ faturas\ pendentes\n\ @return\ \n
comment17.params=
comment17.target=double\ getTotalListaFaturas()
comment17.text=\n\ metodo\ que\ devolve\ o\ somat\u00F3rio\ do\ valor\ de\ despesa\ da\ lista\ de\ faturas\ \n\ @return\ \n
comment18.params=
comment18.target=int\ getNumberFaturas()
comment18.text=\n\ metodo\ que\ o\ numero\ de\ faturas\ emitidas\ \n\ @return\ \n
comment19.params=
comment19.target=double\ reducaoImposto()
comment19.text=\n\ M\u00E9todo\ da\ fase\ 2\n\ metodo\ que\ devolve\ o\ somat\u00F3rio\ do\ valor\ do\ montante\ deduzido\ para\ IRS\ \n\ @return\ \n
comment2.params=faturas
comment2.target=GestaoFaturas(java.util.List)
comment2.text=\n\ Construtor\ para\ objetos\ parametrizado\ da\ classe\ GestaoFaturas\n\ @param\ faturas\n
comment20.params=f\ cod\ ind\ emp
comment20.target=void\ atualizaFatura(Fatura,\ int,\ Individuais,\ Empresarial)
comment20.text=\n\ M\u00E9todo\ que\ escolhe\ uma\ atividade\ conforme\ o\ c\u00F3digo\ e\ atualiza\ o\ montante\ deduzido\n\ @return\ \n
comment21.params=cod\ index\ gc
comment21.target=GestaoFaturas\ atualizaFaturasAtCorreta(int,\ int,\ GestaoContribuintes)
comment21.text=\n\ metodo\ atualiza\ uma\ determinada\ fatura\ da\ lista\ com\ a\ atividade\ correta\ \n\ @return\ \n
comment22.params=date1\ date2\ nifEmitente
comment22.target=GestaoFaturas\ fatBetweenDates(java.time.LocalDate,\ java.time.LocalDate,\ int)
comment22.text=\n\ Retorna\ listagens\ das\ facturas\ por\ contribuinte\ num\ determinado\ intervalo\ de\ datas\n
comment3.params=fat
comment3.target=GestaoFaturas(GestaoFaturas)
comment3.text=\n\ Construtor\ de\ copia\ para\ objetos\ da\ classe\ GestaoFaturas\n\ @param\ fat\ Fatura\n
comment4.params=
comment4.target=java.util.List\ getFaturas()
comment4.text=\n\ Devolve\ as\ faturas\ da\ classe\ GestaoFaturas\n\ @return\ \n
comment5.params=faturas
comment5.target=void\ setFaturas(java.util.List)
comment5.text=\n\ Define\ as\ faturas\ da\ classe\ GestaoFaturas\n\ @param\ faturas\n
comment6.params=
comment6.target=GestaoFaturas\ clone()
comment6.text=\n\ Cria\ uma\ copia\ do\ objecto\ \n\ @return\n
comment7.params=o
comment7.target=boolean\ equals(java.lang.Object)
comment7.text=\n\ Verifica\ a\ igualdade\ de\ dois\ objectos\n\ @param\ obj\n\ @return\ true\ or\ false\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\n\ Retorna\ uma\ representao\ textual\ do\ objecto\n\ @return\ \n
comment9.params=fat
comment9.target=void\ addFatura(Fatura)
comment9.text=\n\ Verifica\ a\ igualdade\ de\ dois\ objectos\n\ @param\ fat\n
numComments=23
